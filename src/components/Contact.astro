---
const apiKey = import.meta.env.CONTACT_API_KEY;
---

<section
	class="esconder container mx-auto flex min-h-screen flex-col justify-center gap-4"
	id="contacto"
>
	<h1 class="mb-4 text-6xl">Contacto<span class="text-accent">.</span></h1>
	<form
		action="https://api.web3forms.com/submit"
		method="POST"
		id="form"
		class="needs-validation"
		data-astro-reload
		novalidate
	>
		<!-- Add your Web3Forms Access Key -->
		<input type="hidden" name="access_key" value={apiKey} />

		<input
			type="checkbox"
			class="hidden"
			style="display:none"
			name="botcheck"
		/>
		<div class="mb-5">
			<input
				type="text"
				placeholder="Nombre"
				required
				class="w-full rounded-md border border-accent px-4 py-3 outline-none ring-accent placeholder:text-slate-400 focus:border-accent focus:ring-4"
				name="name"
			/>
			<div class="empty-feedback invalid-feedback mt-1 text-sm text-red-400">
				Porfavor introduzca su nombre.
			</div>
		</div>
		<div class="mb-5">
			<label for="email_address" class="sr-only">Email</label>
			<input
				id="email_address"
				type="email"
				placeholder="Email"
				name="email"
				required
				class="w-full rounded-md border border-accent px-4 py-3 outline-none ring-accent placeholder:text-slate-400 focus:border-accent focus:ring-4"
			/>
			<div class="empty-feedback mt-1 text-sm text-red-400">
				Porfavor introduzca su email.
			</div>
			<div class="invalid-feedback mt-1 text-sm text-red-400">
				Porfvor introduzca un email valido.
			</div>
		</div>
		<div class="mb-3">
			<textarea
				name="message"
				required
				placeholder="Your Message"
				class="h-36 w-full rounded-md border border-accent px-4 py-3 outline-none ring-accent placeholder:text-slate-400 focus:border-accent focus:ring-4"
			></textarea>
			<div class="empty-feedback invalid-feedback mt-1 text-sm text-red-400">
				Porfavor introduzca su mensaje.
			</div>
		</div>
		<input type="submit" class="btn btn-accent" />
	</form>
	<div id="result" class="mt-3 text-center"></div>
</section>

<style>
	.invalid-feedback,
	.empty-feedback {
		display: none;
	}

	.was-validated :placeholder-shown:invalid ~ .empty-feedback {
		display: block;
	}

	.was-validated :not(:placeholder-shown):invalid ~ .invalid-feedback {
		display: block;
	}

	.is-invalid,
	.was-validated :invalid {
		border-color: #dc3545;
	}
</style>

<script is:inline>
	// use astro:page-load event if you are using View Transitions

	document.addEventListener(
		'DOMContentLoaded',
		() => {
			const form = document.getElementById('form');
			const result = document.getElementById('result');

			form.addEventListener('submit', function (e) {
				e.preventDefault();
				form.classList.add('was-validated');
				if (!form.checkValidity()) {
					form.querySelectorAll(':invalid')[0].focus();
					return;
				}
				const formData = new FormData(form);
				const object = Object.fromEntries(formData);
				const json = JSON.stringify(object);

				result.innerHTML = 'Enviando...';

				fetch('https://api.web3forms.com/submit', {
					method: 'POST',
					headers: {
						'Content-Type': 'application/json',
						Accept: 'application/json',
					},
					body: json,
				})
					.then(async response => {
						let json = await response.json();
						if (response.status == 200) {
							result.classList.add('text-green-500');
							result.innerHTML =
								'Enviado con exito! Gracias por contactarme, te respondere lo mas pronto posible.';
						} else {
							console.log(response);
							result.classList.add('text-red-500');
							result.innerHTML = json.message;
						}
					})
					.catch(error => {
						console.log(error);
						result.innerHTML = 'Algo fue mal!';
					})
					.then(function () {
						form.reset();
						form.classList.remove('was-validated');
						setTimeout(() => {
							result.style.display = 'none';
						}, 5000);
					});
			});
		},
		{ once: true },
	);
</script>
